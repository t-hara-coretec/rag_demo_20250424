{"content": "Pydantic Logfire\nFuture-proof your observability\nEliminate the need for multiple tools. Logfire offers native AI integrations—from LLM API calls to agent frameworks—plus comprehensive observability for any workload, AI or not.\nGet started\nGet started\nVisit docs\nSoftware developer? Then you’ve likely encountered these headaches\nWorking\nwith over-complicated observability platforms\nthat don't understand your code or application.\nSifting through\nendless print statements\nand decoding cryptic portrayals of Python objects in your logs.\nGuessing at the performance hit\nfrom a specific function, or a mysterious slowdown of your app.\nWhether you’re building an AI tool or any other cloud-based app, these frustrating scenarios are avoidable but all too real.\nINTRODUCING LOGFIRE\nA more intuitive way to understand your\nPydantic Logfire is a window into the inner workings of your application. Smooth to set up and easy to understand, with ready integrations for many popular libraries.\nOpenAI\nFastAPI\nDatabase\nexpand\nsee in full\nview full example\nFeatures\nPython and beyond\nWhile Pydantic Logfire is Python-first, it’s an observability platform that works just as well with other programming languages.\nPerformance insights\nTransform garbled logs into actionable insights. Discover not just how long a function takes to run, but which queries slow down your app.\nComprehensive visibility\nUnderstand your app’s behaviour — from request headers and bodies to the full trace of program execution.\nData-driven decisions\nTurn your logs into visualizations, dashboards, and alerts that drive development forward.\nInsights\nFaster fixes, deeper insights\nWith an SDK built on top of OpenTelemetry, structured data and an intuitive interface, Pydantic Logfire makes it easy to monitor the behavior of Python applications, at every level. Instrument your app using best practices and draw powerful insights — without hiring a dedicated analytics or observability team.\nStructured Data & Direct SQL Access\nEnsure your Python objects and structured data are query-ready. Use tools like Pandas, SQLAlchemy, or psql for querying, integrate seamlessly with BI software, and leverage AI for SQL generation.\nSELECT\nattributes\n-\n>>\n'campaign'\nas\ncampaign,\ncount\n(\ndistinct\nattributes\n-\n>>\n'track_id'\n)\nas\nclicks,\nround(\ncount\n(\ndistinct\nattributes\n-\n>>\n'track_id'\n)::\nnumeric\n/\n50\n*\n100\n,\n2\n)\nas\nclick_rate\nFROM\nrecords\nWHERE\nspan_name\n=\n'Click on {campaign}'\nand\nattributes\n-\n>>\n'campaign'\nilike\n'c%'\nGROUP\nBY\nattributes\n-\n>>\n'campaign'\nManual Tracing\nYou can use the logfire library to create logs and traces directly — it’s kind of like standard logging in Python, with a more modern interface and some extra capabilities. And a lot less painful than using OpenTelemetry directly.\nimport\nlogfire\nlogfire.configure()\nname =\n'world'\nlogfire.info(\nf'Hello,\n{name}\n!'\n)\n# ^ Equivalent to:\n# logfire.info('Hello, {name}!', name=name)\nadvantages =\n'timing'\n,\n'context'\n,\n'exception capturing'\nwith\nlogfire.span(\nf'spans provide:\n{advantages}\n'\n):\nlogfire.warn(\n'the next line will raise an exception'\n)\n1\n/\n0\nOpenTelemetry\nOpenTelemetry\n(OTel) is an open source observability framework, it provides libraries for Python and every other popular language to let you collect traces, logs and metrics.\nOTel is a powerful tool that increasing numbers of developers want to use, but it can be time-consuming to set up and limited in the kinds of data it can collect.\nPydantic Logfire takes the best of OTel (instrumentation for popular Python packages, open standard for data transmission) and makes it easier to use and more flexible.\nBy harnessing OpenTelemetry, Pydantic Logfire offers automatic instrumentation for popular Python packages, enables cross-language data integration, and supports data export to any OpenTelemetry-compatible backend or proxy.\nLogfire is already making developers' lives easier\nFrom the creators of Pydantic,\nCrafted with the same developer obsession\nBuilt with developer experience at its core, Pydantic Logfire brings the same balance of ease, sophistication and productivity that’s made Pydantic the most popular data validation library on planet earth. Whether you’re using observability for the first time or an expert, we make it easy.\nOut-of-the-box integration\nUse Pydantic Logfire to monitor the data that runs through Pydantic for a customized experience that goes way beyond generic observability platforms.\nFOR DEVELOPERS\nReady to start building?\nLogfire’s Python SDK is open source under the MIT license and wraps the OpenTelemetry Python package. By default, it will send data to the Logfire platform but you could send data to any OpenTelemetry Protocol (OTLP) compliant endpoint.\nDocs\nDocs\nGitHub\nGitHub\nSlack\nSlack\nA window into your application\nGet started\nGet started\npip install logfire", "metadata": {"source": "https://pydantic.dev/logfire", "title": "Pydantic Logfire", "domain": "pydantic.dev", "type": "web"}}